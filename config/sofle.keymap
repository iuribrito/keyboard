/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        hold_behavior: hold_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_BEHAVIOR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1>;
        };

        scroll_mouse_behavior: scroll_mouse_behavior {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "SCROLL_MOUSE_BEHAVIOR";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;
        };

        toggle_layer_tap_key: toggle_layer_tap_key {
            compatible = "zmk,behavior-hold-tap";
            label = "TOGGLE_LAYER_TAP_KEY";
            bindings = <&kp>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Brito {
            display-name = "brito";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE       &kp N1  &kp N2  &kp N3  &kp N4        &kp N5                                       &kp N6     &kp N7         &kp N8     &kp N9   &kp N0    &kp MINUS
&kp ESC         &kp Q   &kp W   &kp E   &kp R         &kp T                                        &kp Y      &kp U          &kp I      &kp O    &kp P     &kp EQUAL
&kp TAB         &kp A   &kp S   &kp D   &kp F         &kp G                                        &kp H      &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z   &kp X   &kp C   &kp V         &kp B             &kp C_MUTE      &none      &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSLASH
                        &trans  &trans  &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 1 RETURN    &kp SPACE  &kp LCTRL  &kp RIGHT_ALT  &trans     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        Move {
            display-name = "move";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp GRAVE       &kp F1  &kp F2        &kp F3           &kp F4        &kp F5                                      &kp F6          &kp F7          &kp F8        &kp F9     &kp DELETE        &kp BACKSPACE
&kp CAPSLOCK    &trans  &trans        &kp PRINTSCREEN  &kp HOME      &kp PG_UP                                   &trans          &kp F10         &kp F11       &kp F12    &kp LEFT_BRACE    &kp RIGHT_BRACE
&trans          &trans  &trans        &kp INSERT       &kp END       &kp PAGE_DOWN                               &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LEFT_SHIFT  &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_CLR_ALL    &trans     &trans          &trans          &trans        &trans     &trans            &trans
                        &trans        &trans           &trans        &trans         &trans            &kp SPACE  &trans          &trans          &trans        &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&scroll_mouse_behavior SCRL_RIGHT SCRL_LEFT>;
        };
    };

    display {
        compatible = "zmk,display";

        left_display_screen: left_display_screen {
            compatible = "zmk,display-screen-status";
            label = "left_display_screen";
            widgets = <&wpm_widget &battery_widget &layer_widget &caps_word_widget>;
        };

        right_display_screen: right_display_screen {
            compatible = "zmk,display-screen-status";
            label = "right_display_screen";
            widgets = <&layer_image_widget>;
        };

        caps_word_widget: caps_word_widget {
            compatible = "zmk,widget-caps-word-status";
            label = "caps_word_widget";
            position = <0 48>;
        };

        wpm_widget: wpm_widget {
            compatible = "zmk,widget-wpm";
            label = "wpm_widget";
            position = <0 0>;
        };

        battery_widget: battery_widget {
            compatible = "zmk,widget-battery-status";
            label = "battery_widget";
            position = <0 16>;
        };

        layer_widget: layer_widget {
            compatible = "zmk,widget-layer-status";
            label = "layer_widget";
            position = <0 32>;
        };

        layer_image_widget: layer_image_widget {
            compatible = "zmk,widget-layer-state-image";
            label = "layer_image_widget";
            base-image = <&cat_base_image>;
            lower-image = <&cat_lower_image>;
            raise-image = <&cat_raise_image>;
            position = <0 0>;
        };

        cat_base_image: cat_base_image {
            compatible = "zmk,widget-image";
            label = "cat_base_image";
            image = <0x00 0x3C 0x7E 0x66 0x7E 0x3C 0x00 0x00>; // Happy Cat
            position = <0 0>;
        };

        cat_lower_image: cat_lower_image {
            compatible = "zmk,widget-image";
            label = "cat_lower_image";
            image = <0x00 0x24 0x5A 0x5A 0x5A 0x24 0x00 0x00>; // Thinking Cat
            position = <0 0>;
        };

        cat_raise_image: cat_raise_image {
            compatible = "zmk,widget-image";
            label = "cat_raise_image";
            image = <0x00 0x18 0x24 0x42 0x24 0x18 0x00 0x00>; // Surprised Cat
            position = <0 0>;
        };
    };
};
